<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.vitorgalvao.alfred.downvid</string>
	<key>category</key>
	<string>Tools</string>
	<key>connections</key>
	<dict>
		<key>3B69F416-A08B-4618-99B6-E2AED211C9D8</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>E46D269F-3FF9-4B6F-ACAC-6895E0BA46CC</string>
				<key>modifiers</key>
				<integer>1048576</integer>
				<key>modifiersubtext</key>
				<string>Restart current download at bottom of queue</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>C95B128B-0AD1-41F2-A2D6-42BE6FE84306</string>
				<key>modifiers</key>
				<integer>262144</integer>
				<key>modifiersubtext</key>
				<string>Abort current download</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>67C1A19D-DDF7-450A-A615-B9C134D6975F</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>87AAFCF7-6532-4486-8489-54674100A52C</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>6A286F10-FD49-4463-9540-0EECBE45438D</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>B1F76879-4318-4A04-B58F-150347E9CC29</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>D8524846-F942-4A77-9461-8BAED974B8CF</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>6A286F10-FD49-4463-9540-0EECBE45438D</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>DC74421D-631A-44B1-AC86-ED7793CADE26</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>6A286F10-FD49-4463-9540-0EECBE45438D</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Download media from popular sources</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>DownVid</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/source/info.plist"
readonly workflow_url="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/${alfred_workflow_name}.alfredworkflow"
readonly download_type='direct'
readonly frequency_check='4'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  readonly local notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/Resources/Scripts/notificator" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  readonly local terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  download_url="$([[ "${download_type}" == 'github_release' ]] &amp;&amp; curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest" | grep 'browser_download_url' | head -1 | sed -E 's/.*browser_download_url": "(.*)"/\1/' || echo "${workflow_url}")"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${download_url}"
    open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>B1F76879-4318-4A04-B58F-150347E9CC29</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>./downvid "${1}"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>6A286F10-FD49-4463-9540-0EECBE45438D</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>triggerid</key>
				<string>new</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.external</string>
			<key>uid</key>
			<string>D8524846-F942-4A77-9461-8BAED974B8CF</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>dv</string>
				<key>queuedelaycustom</key>
				<integer>1</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Please wait…</string>
				<key>script</key>
				<string>require 'json'

url = %x(pbpaste).strip
script_filter_items = []

if Dir.exist?(File.dirname(ENV['alfred_workflow_cache']) + '/com.vitorgalvao.alfred.watchlist')
  script_filter_items.push(
    uid: 'dvw',
    title: 'Download Video to WatchList',
    subtitle: "Downloads the video to #{ENV['watchlist_download_dir']} and adds it to WatchList",
    arg: "#{url} video watchlist_true playlist_false",
    mods: { cmd: { subtitle: 'Download full playlist', arg: "#{url} video watchlist_true playlist_true" } }
  )
end

script_filter_items.push(
  {
    uid: 'dv',
    title: 'Download Video',
    subtitle: "Downloads the video to #{ENV['download_dir']}",
    arg: "#{url} video watchlist_false playlist_false",
    mods: { cmd: { subtitle: 'Download full playlist', arg: "#{url} video watchlist_false playlist_true" } }
  },
  {
    uid: 'da',
    title: 'Download Audio',
    subtitle: "Downloads the audio to #{ENV['download_dir']}",
    arg: "#{url} audio watchlist_false playlist_false",
    mods: { cmd: { subtitle: 'Download full playlist', arg: "#{url} audio watchlist_false playlist_true" } }
  }
)

puts({ items: script_filter_items }.to_json)</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Download videos from popular sources (uses the URL in your clipboard)</string>
				<key>title</key>
				<string>DownVid</string>
				<key>type</key>
				<integer>2</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>DC74421D-631A-44B1-AC86-ED7793CADE26</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>./downvid_restart restart_download_true</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>E46D269F-3FF9-4B6F-ACAC-6895E0BA46CC</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>dvp</string>
				<key>queuedelaycustom</key>
				<integer>1</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Please wait…</string>
				<key>script</key>
				<string>require 'json'

progressfile = '/tmp/downvidprogress'

if File.exist?(progressfile)
  filecontents = IO.readlines(progressfile)

  if filecontents.grep(%r{\[download\].*%.*ETA}).any?
    filename = File.basename(filecontents.grep(%r{\[download\] Destination: })[0].strip)
    progress = filecontents[-1].delete('[download]').strip

    script_filter_content = {
      rerun: 1,
      items: [
        title: "#{ENV['alfred_workflow_name']} Progress",
        subtitle: "#{progress} / #{filename}",
        valid: false,
        mods: { ctrl: { valid: true }, cmd: { valid: true } }
      ]
    }
  else
    script_filter_content = {
      rerun: 1,
      items: [
        title: "#{ENV['alfred_workflow_name']} Progress",
        subtitle: 'Getting download info…'
      ]
    }
  end
elsif ENV['state'].nil?
  script_filter_content = {
    rerun: 3,
    variables: { state: 'stopped' },
    items: [
      title: "#{ENV['alfred_workflow_name']} Progress",
      subtitle: 'Checking for downloads in queue…',
      valid: false
    ]
  }
else # state == 'stopped'
  script_filter_content = {
    rerun: 3,
    items: [
      title: "#{ENV['alfred_workflow_name']} Progress",
      subtitle: 'No downloads in progress.',
      valid: false
    ]
  }
end

puts(script_filter_content.to_json)</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Shows progress of the current DownVid download</string>
				<key>title</key>
				<string>DownVid Progress</string>
				<key>type</key>
				<integer>2</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>3B69F416-A08B-4618-99B6-E2AED211C9D8</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>./downvid_restart restart_download_false</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>C95B128B-0AD1-41F2-A2D6-42BE6FE84306</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>:downvidservices</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Please wait…</string>
				<key>script</key>
				<string>require 'json'

if Dir.exist?("#{ENV['HOME']}/Library/Services/DownVid.workflow") # DownVid Service
  script_filter_items = [
    title: 'Remove DownVid Services',
    subtitle: 'Will be removed from ~/Library/Services',
    arg: 'uninstall'
  ]
else
  script_filter_items = [
    title: 'Install DownVid Services',
    subtitle: 'Will be installed to ~/Library/Services',
    arg: 'install'
  ]
end

puts({ items: script_filter_items }.to_json)</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Install/remove DownVid Services</string>
				<key>type</key>
				<integer>2</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>67C1A19D-DDF7-450A-A615-B9C134D6975F</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>if [[ "${1}" == 'install' ]]; then
  cp -r "./services/"* "${HOME}/Library/Services/"
else
  rm -r "${HOME}/Library/Services/DownVid"*
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>87AAFCF7-6532-4486-8489-54674100A52C</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Download media from [a plethora of sources](https://rg3.github.io/youtube-dl/supportedsites.html), even when embedded in other pages.

Copy a link to your clipboard, run `dv`, and you’re done. The workflow will show you a notification when it starts downloading and another when finished.

If you have [WatchList](https://github.com/vitorgalvao/alfred-workflows/tree/master/WatchList) you’ll see an option to automatically add the downloaded video to your watchlist.

![](https://i.imgur.com/8W1gKXv.png)
 
Run any option with the ⌘ modifier, and the full playlist will be downloaded.

To see the download progress, run `dvp`. It will auto-refresh the progress. Actioning it with the ⌘ modifier will restart the current download (adding it to the back of the queue), while actioning with ⌃ will abort the current download.

![](https://i.imgur.com/92TfpDM.png)
 
You can also run `:downvidservices` to install (or later remove, running the same command) DownVid actions to macOS Services. What this means is wherever you find a URL, you’ll be able to right click it and start the download right from the context menu.

![](https://i.imgur.com/rOxAzRk.png)

The Workflow Environment Variables represent the directories where videos will download to, as well as the audio format to save when that option is picked.</string>
	<key>uidata</key>
	<dict>
		<key>3B69F416-A08B-4618-99B6-E2AED211C9D8</key>
		<dict>
			<key>xpos</key>
			<integer>230</integer>
			<key>ypos</key>
			<integer>260</integer>
		</dict>
		<key>67C1A19D-DDF7-450A-A615-B9C134D6975F</key>
		<dict>
			<key>xpos</key>
			<integer>230</integer>
			<key>ypos</key>
			<integer>500</integer>
		</dict>
		<key>6A286F10-FD49-4463-9540-0EECBE45438D</key>
		<dict>
			<key>xpos</key>
			<integer>430</integer>
			<key>ypos</key>
			<integer>20</integer>
		</dict>
		<key>87AAFCF7-6532-4486-8489-54674100A52C</key>
		<dict>
			<key>xpos</key>
			<integer>430</integer>
			<key>ypos</key>
			<integer>500</integer>
		</dict>
		<key>B1F76879-4318-4A04-B58F-150347E9CC29</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>610</integer>
			<key>ypos</key>
			<integer>20</integer>
		</dict>
		<key>C95B128B-0AD1-41F2-A2D6-42BE6FE84306</key>
		<dict>
			<key>xpos</key>
			<integer>430</integer>
			<key>ypos</key>
			<integer>380</integer>
		</dict>
		<key>D8524846-F942-4A77-9461-8BAED974B8CF</key>
		<dict>
			<key>xpos</key>
			<integer>30</integer>
			<key>ypos</key>
			<integer>20</integer>
		</dict>
		<key>DC74421D-631A-44B1-AC86-ED7793CADE26</key>
		<dict>
			<key>xpos</key>
			<integer>230</integer>
			<key>ypos</key>
			<integer>130</integer>
		</dict>
		<key>E46D269F-3FF9-4B6F-ACAC-6895E0BA46CC</key>
		<dict>
			<key>xpos</key>
			<integer>430</integer>
			<key>ypos</key>
			<integer>260</integer>
		</dict>
	</dict>
	<key>variables</key>
	<dict>
		<key>audio_format</key>
		<string>best</string>
		<key>download_dir</key>
		<string>~/Desktop</string>
		<key>watchlist_download_dir</key>
		<string>~/Downloads</string>
	</dict>
	<key>variablesdontexport</key>
	<array/>
	<key>version</key>
	<string>1.22.10</string>
	<key>webaddress</key>
	<string>http://vitorgalvao.com/</string>
</dict>
</plist>
